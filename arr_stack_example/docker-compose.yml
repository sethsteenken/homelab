#Please refer to the online docs for each service, when setting up the proxy
#or if u want to expose the ports manually. read the gluetun docs.
#containers that are likely to fail are using healtchecks
#u can restart them automatically using docker-autoheal
#i am still testing this config so use it as a starting point, but it works 99% of the time for me

services:
  vpn:
    container_name: vpn
    image: qmcgaw/gluetun
    cap_add:
      - NET_ADMIN
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER:-protonvpn}
      - OPENVPN_USER=${OPENVPN_USER:-""}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD:-""}
      - SERVER_COUNTRIES=${SERVER_COUNTRIES:-""}
    networks:
      - mediastacknetwork
    restart: always

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    networks:
      - mediastacknetwork
    environment:
      - LOG_LEVEL=debug
      - TZ=UTC
    volumes:
      - /path/to/appdata/config:/app/config
    restart: always

  transmission:
    container_name: transmission
    image: linuxserver/transmission:latest
    networks:
      - mediastacknetwork
    network_mode: service:vpn
    depends_on:
      - vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - USER=${TRANSMISSION_USER:-""}
      - PASS=${TRANSMISSION_PASSWORD:-""}
    volumes:
      - tx-config:/config
      - torrent-downloads:/downloads
      - tx-watch:/watch
    restart: always
    healthcheck:
      test: curl --fail https://myip.wtf/json || exit 1
      interval: 10s
      retries: 3
      start_period: 20s
      timeout: 5s

  stb:
    container_name: stb
    image: chris230291/stb-proxy:latest
    networks:
      - mediastacknetwork
    environment:
      - HOST=stb:8001
    volumes:
      - stb-config:/config
    restart: always

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    networks:
      - mediastacknetwork
    network_mode: service:vpn
    depends_on:
      - vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - sabnzbd-config:/config
      - torrent-downloads:/downloads
    healthcheck:
      test: curl --fail https://myip.wtf/json || exit 1
      interval: 10s
      retries: 3
      start_period: 20s
      timeout: 5s

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    networks:
      - mediastacknetwork
    network_mode: service:vpn
    depends_on:
      - vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - bazarr-config:/config
      - torrent-downloads:/downloads
    restart: always
    healthcheck:
      test: curl --fail https://myip.wtf/json || exit 1
      interval: 10s
      retries: 3
      start_period: 20s
      timeout: 5s

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    networks:
      - mediastacknetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - radarr-config:/config
      - torrent-downloads:/downloads
    restart: always

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    networks:
      - mediastacknetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - sonarr-config:/config
      - torrent-downloads:/downloads
    restart: always

  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    networks:
      - mediastacknetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - jackett-config:/config
      - jackett-blackhole:/downloads
    restart: always

  prowlarr:
    container_name: prowlarr
    image: linuxserver/prowlarr:latest
    network_mode: service:vpn
    networks:
      - mediastacknetwork
    depends_on:
      - vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - prowlarr-config:/config
    restart: always
    healthcheck:
      test: curl --fail https://myip.wtf/json || exit 1
      interval: 10s
      retries: 3
      start_period: 20s
      timeout: 5s

  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: jellyfin
    networks:
      - mediastacknetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - jellyfin-config:/config
      - torrent-downloads:/data
    restart: always

  organizr:
    container_name: organizr
    hostname: organizr
    image: organizr/organizr:latest
    restart: unless-stopped
    networks:
      - mediastacknetwork
    volumes:
      - organizr-config:/config
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC

volumes:
  torrent-downloads:
  radarr-config:
  sonarr-config:
  jackett-config:
  jackett-blackhole:
  prowlarr-config:
  jellyfin-config:
  qbittorrent-config:
  tx-config:
  tx-watch:
  sabnzbd-config:
  bazarr-config:
  organizr-config:
  stb-config:

networks:
  mediastacknetwork:
    external: true